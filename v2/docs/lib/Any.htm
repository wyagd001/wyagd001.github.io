<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>Any - 方法 &amp; 属性 | AutoHotkey v2</title>
<meta name="description" content="Any represents the root of the AutoHotkey type hierarchy." />
<meta name="ahk:equiv-v1" content="index.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

 <h1>Any</h1>

<p><code>Any</code> 是位于 AutoHotkey 类型层次结构根部的类. 所有其他类型都是 Any 的子类型.</p>
<p><code>Any.Prototype</code> 定义了适用于所有值和对象(目前不包括 <a href="ComValue.htm">ComValue</a> 和衍生类型) 的方法和属性, 被覆盖改写的除外. 原型对象本身本质上是一个 <a href="Object.htm">Object</a>, 但是没有 <code>base</code>, 因此不能识别为对象的实例.</p>

<h2 id="toc">目录</h2>
<ul class="indent">
  <li><a href="#Methods">方法</a>:
    <ul>
      <li><a href="#GetMethod">GetMethod</a>: 检索方法的实现函数.</li>
      <li><a href="#HasBase">HasBase</a>: 如果指定的基对象在值的基对象链中, 则返回 true.</li>
      <li><a href="#HasMethod">HasMethod</a>: 如果该值具有使用此名称的方法, 则返回 true.</li>
      <li><a href="#HasProp">HasProp</a>: 如果值具有使用此名称的属性, 则返回 true.</li>
    </ul>
  </li>
  <li><a href="#Properties">属性</a>:
    <ul>
      <li><a href="#Base">Base</a>: 检索值的基对象.</li>
    </ul>
  </li>
  <li><a href="#Functions">函数</a>:
    <ul>
      <li><a href="#GetBase">ObjGetBase</a>: 返回值的基对象.</li>
    </ul>
  </li>
</ul>

 <h2 id="Methods">方法</h2>

 <div class="methodShort" id="GetMethod"><h3>GetMethod</h3>
<p>检索方法的实现函数.</p>
<pre class="Syntax">Value.<span class="func">GetMethod</span>(<span class="optional">Name, ParamCount</span>)</pre>
<p>除非被覆盖, 否则这个方法完全相同于 <code>GetMethod(Value, Name, ParamCount)</code>.</p>
</div>

 <div class="methodShort" id="HasBase"><h3>HasBase</h3>
<p>如果指定的<a href="../Objects.htm#delegation">基对象</a>在值的基对象链中, 则返回 true. 否则返回 false.</p>
<pre class="Syntax">Value.<span class="func">HasBase</span>(BaseObj)</pre>
<p>除非被覆盖, 否则这个方法完全相同于 <code>HasBase(Value, BaseObj)</code>.</p>
</div>

 <div class="methodShort" id="HasMethod"><h3>HasMethod</h3>
<p>如果该值具有使用此名称的方法, 则返回 true, 否则返回 false.</p>
<pre class="Syntax">Value.<span class="func">HasMethod</span>(<span class="optional">Name, ParamCount</span>)</pre>
<p>除非被覆盖, 否则这个方法完全相同于 <code>HasMethod(Value, Name, ParamCount)</code>.</p>
</div>

 <div class="methodShort" id="HasProp"><h3>HasProp</h3>
<p>如果值具有使用此名称的属性, 则返回 true, 否则返回 false.</p>
<pre class="Syntax">Value.<span class="func">HasProp</span>(Name)</pre>
<p>除非被覆盖, 否则这个方法完全相同于 <code>HasProp(Value, Name)</code>.</p>
</div>

 <h2 id="Properties">属性</h2>

 <div class="methodShort" id="Base"><h3>Base</h3>
<p>检索值的<a href="../Objects.htm#delegation">基对象</a>.</p>
<pre class="Syntax">BaseObj := Value.<span class="func">Base</span></pre>
<p>对于<a href="../Objects.htm#primitive">原始值</a>, 返回值是与 <code>Type(Value)</code> 对应的预定义原型对象.</p>
<p>另请参阅: <a href="#GetBase">ObjGetBase</a>, <a href="Object.htm#SetBase">ObjSetBase</a>, <a href="Object.htm#Base">Obj.Base</a></p>
</div>

<h2 id="Functions">函数</h2>
<h3 id="GetBase">ObjGetBase</h3>
<p>返回值的<a href="../Objects.htm#delegation">基对象</a>.</p>
<pre class="Syntax">BaseObj := <span class="func">ObjGetBase</span>(Value)</pre>
<p>不调用<a href="../Objects.htm#Meta_Functions">元函数</a>或<a href="../Objects.htm#Custom_Classes_property">属性函数</a>. 覆盖 <a href="#Base">Base</a> 属性不会影响此函数的行为.</p>
<p>如果没有基, 则返回值为空字符串. 只有 Any 原型本身没有基.</p>
<p>另请参阅: <a href="#Base">Base</a>, <a href="Object.htm#SetBase">ObjSetBase</a>, <a href="Object.htm#Base">Obj.Base</a></p>
</div>

 </body>
</html>